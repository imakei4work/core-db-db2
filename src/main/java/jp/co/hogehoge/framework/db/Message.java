package jp.co.hogehoge.framework.db;

import java.text.MessageFormat;

/**
 * メッセージ。
 */
public enum Message {

	/**
	 * トランザクション実行中にエラーが発生しました。
	 */
	DBE00001("トランザクション実行中にエラーが発生しました。"),

	/**
	 * SQL実行結果を格納する際にエラーが発生しました。
	 */
	DBE00002("SQL実行結果を格納する際にエラーが発生しました。"),

	/**
	 * データベース・コネクションの取得に失敗しました。
	 */
	DBE00003("データベース・コネクションの取得に失敗しました。"),

	/**
	 * データ・ソースの取得に失敗しました。
	 */
	DBE00004("データ・ソースの取得に失敗しました。[データ・ソース={0}]"),

	/**
	 * プレースホルダーのバインドに失敗しました。
	 */
	DBE00005("プレースホルダーのバインドに失敗しました。[フィールド={0}]"),

	/**
	 * プレースホルダーのバインド時にサポートされていないデータ型が指定されました。
	 */
	DBE00006("プレースホルダーのバインド時にサポートされていないデータ型が指定されました。[フィールド名={0},データ型={1}]"),

	/**
	 * トランザクション実行中にエラーが発生し、ロールバックしました。
	 */
	DBE00007("トランザクション実行中にエラーが発生し、ロールバックしました。"),

	/**
	 * トランザクション実行中にエラーが発生し、ロールバックも失敗しました。
	 */
	DBE00008("トランザクション実行中にエラーが発生し、ロールバックも失敗しました。"),

	/**
	 * レコードのロックが解放されずエラーが発生しました。
	 */
	DBE00009("レコードのロックが解放されずSQL（ID={0}）が処理されませんでした。[PARAM={1}]");

	private String message;

	/**
	 * コンストラクタ。
	 * 
	 * @param message メッセージ
	 */
	private Message(String message) {
		this.message = message;
	}

	/**
	 * メッセージを取得する。
	 * 
	 * @return メッセージ
	 */
	public String get() {
		return this.message;
	}

	/**
	 * メッセージIDを取得する。
	 * 
	 * @return メッセージID
	 */
	public String getId() {
		return name();
	}

	/**
	 * メッセージをフォーマットして取得する。
	 * 
	 * @param arg フォーマットする値
	 * @return メッセージ
	 */
	public String format(Object... arg) {
		return MessageFormat.format(this.message, arg);
	}

}
